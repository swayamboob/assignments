> show collections;
system.indexes
> db.createCollection('Student');
{ "ok" : 1 }
> db.Student.insert({_id:1,Name:'Shivani',RollNo:15,Dept:'Comp',Year:3});
WriteResult({ "nInserted" : 1 })
> db.Student.insert({_id:2,Name:'Shweta',RollNo:16,Dept:'Comp',Year:3});
WriteResult({ "nInserted" : 1 })
> db.Student.insert({_id:3,Name:'Saransh',RollNo:17,Dept:'Comp',Year:3});
WriteResult({ "nInserted" : 1 })
> db.Student.insert({_id:3,Name:'Abhi',RollNo:18,Dept:'Comp',Year:3});
WriteResult({
	"nInserted" : 0,
	"writeError" : {
		"code" : 11000,
		"errmsg" : "insertDocument :: caused by :: 11000 E11000 duplicate key error index: t31478db.Student.$_id_  dup key: { : 3.0 }"
	}
})
> db.Student.insert({_id:4,Name:'Abhi',RollNo:18,Dept:'Comp',Year:3});
WriteResult({ "nInserted" : 1 })
> db.Student.insert({_id:5,Name:'Abhishek',RollNo:19,Dept:'Comp',Year:3});
WriteResult({ "nInserted" : 1 })
> db.Student.insert({_id:6,Name:'Roshan',RollNo:20,Dept:'Comp',Year:3});
WriteResult({ "nInserted" : 1 })
> db.Student.insert({_id:7,Name:'Sara',RollNo:21,Dept:'Comp',Year:3});
WriteResult({ "nInserted" : 1 })
> db.Student.find();
{ "_id" : 1, "Name" : "Shivani", "RollNo" : 15, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 2, "Name" : "Shweta", "RollNo" : 16, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 3, "Name" : "Saransh", "RollNo" : 17, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 4, "Name" : "Abhi", "RollNo" : 18, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 5, "Name" : "Abhishek", "RollNo" : 19, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 6, "Name" : "Roshan", "RollNo" : 20, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 7, "Name" : "Sara", "RollNo" : 21, "Dept" : "Comp", "Year" : 3 }
> db.Student.find().pretty();
{
	"_id" : 1,
	"Name" : "Shivani",
	"RollNo" : 15,
	"Dept" : "Comp",
	"Year" : 3
}
{
	"_id" : 2,
	"Name" : "Shweta",
	"RollNo" : 16,
	"Dept" : "Comp",
	"Year" : 3
}
{
	"_id" : 3,
	"Name" : "Saransh",
	"RollNo" : 17,
	"Dept" : "Comp",
	"Year" : 3
}
{ "_id" : 4, "Name" : "Abhi", "RollNo" : 18, "Dept" : "Comp", "Year" : 3 }
{
	"_id" : 5,
	"Name" : "Abhishek",
	"RollNo" : 19,
	"Dept" : "Comp",
	"Year" : 3
}
{
	"_id" : 6,
	"Name" : "Roshan",
	"RollNo" : 20,
	"Dept" : "Comp",
	"Year" : 3
}
{ "_id" : 7, "Name" : "Sara", "RollNo" : 21, "Dept" : "Comp", "Year" : 3 }
> 

> db.Student.insert({_id:8,Name:'Amar',RollNo:23,Dept:'Comp',Year:3,Grade:'A'});
WriteResult({ "nInserted" : 1 })
> db.Student.find().pretty();
{
	"_id" : 1,
	"Name" : "Shivani",
	"RollNo" : 15,
	"Dept" : "Comp",
	"Year" : 3
}
{
	"_id" : 2,
	"Name" : "Shweta",
	"RollNo" : 16,
	"Dept" : "Comp",
	"Year" : 3
}
{
	"_id" : 3,
	"Name" : "Saransh",
	"RollNo" : 17,
	"Dept" : "Comp",
	"Year" : 3
}
{ "_id" : 4, "Name" : "Abhi", "RollNo" : 18, "Dept" : "Comp", "Year" : 3 }
{
	"_id" : 5,
	"Name" : "Abhishek",
	"RollNo" : 19,
	"Dept" : "Comp",
	"Year" : 3
}
{
	"_id" : 6,
	"Name" : "Roshan",
	"RollNo" : 20,
	"Dept" : "Comp",
	"Year" : 3
}
{ "_id" : 7, "Name" : "Sara", "RollNo" : 21, "Dept" : "Comp", "Year" : 3 }
{
	"_id" : 8,
	"Name" : "Amar",
	"RollNo" : 23,
	"Dept" : "Comp",
	"Year" : 3,
	"Grade" : "A"
}
> 

> db.Student.findOne();
{
	"_id" : 1,
	"Name" : "Shivani",
	"RollNo" : 15,
	"Dept" : "Comp",
	"Year" : 3
}


Update:

> db.Student.update({_id:7},{$set:{'Name':'Vaishu'}});
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.Student.find().pretty();
{
	"_id" : 1,
	"Name" : "Shivani",
	"RollNo" : 15,
	"Dept" : "Comp",
	"Year" : 3
}
{
	"_id" : 2,
	"Name" : "Shweta",
	"RollNo" : 16,
	"Dept" : "Comp",
	"Year" : 3
}
{
	"_id" : 3,
	"Name" : "Saransh",
	"RollNo" : 17,
	"Dept" : "Comp",
	"Year" : 3
}
{ "_id" : 4, "Name" : "Abhi", "RollNo" : 18, "Dept" : "Comp", "Year" : 3 }
{
	"_id" : 5,
	"Name" : "Abhishek",
	"RollNo" : 19,
	"Dept" : "Comp",
	"Year" : 3
}
{
	"_id" : 6,
	"Name" : "Roshan",
	"RollNo" : 20,
	"Dept" : "Comp",
	"Year" : 3
}
{
	"_id" : 7,
	"Name" : "Vaishu",
	"RollNo" : 21,
	"Dept" : "Comp",
	"Year" : 3
}
{
	"_id" : 8,
	"Name" : "Amar",
	"RollNo" : 23,
	"Dept" : "Comp",
	"Year" : 3,
	"Grade" : "A"
}
> 

> db.Student.update({_id:8},{$set:{'Dept':'IT',Grade:'A+'}});
WriteResult({ "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 })
> db.Student.find().pretty();
{
	"_id" : 1,
	"Name" : "Shivani",
	"RollNo" : 15,
	"Dept" : "Comp",
	"Year" : 3
}
{
	"_id" : 2,
	"Name" : "Shweta",
	"RollNo" : 16,
	"Dept" : "Comp",
	"Year" : 3
}
{
	"_id" : 3,
	"Name" : "Saransh",
	"RollNo" : 17,
	"Dept" : "Comp",
	"Year" : 3
}
{ "_id" : 4, "Name" : "Abhi", "RollNo" : 18, "Dept" : "Comp", "Year" : 3 }
{
	"_id" : 5,
	"Name" : "Abhishek",
	"RollNo" : 19,
	"Dept" : "Comp",
	"Year" : 3
}
{
	"_id" : 6,
	"Name" : "Roshan",
	"RollNo" : 20,
	"Dept" : "Comp",
	"Year" : 3
}
{
	"_id" : 7,
	"Name" : "Vaishu",
	"RollNo" : 21,
	"Dept" : "Comp",
	"Year" : 3
}
{
	"_id" : 8,
	"Name" : "Amar",
	"RollNo" : 23,
	"Dept" : "IT",
	"Year" : 3,
	"Grade" : "A+"
}
> 

Remove/Delete


> db.Student.remove({_id:6});
WriteResult({ "nRemoved" : 1 })
> db.Student.find().pretty();
{
	"_id" : 1,
	"Name" : "Shivani",
	"RollNo" : 15,
	"Dept" : "Comp",
	"Year" : 3
}
{
	"_id" : 2,
	"Name" : "Shweta",
	"RollNo" : 16,
	"Dept" : "Comp",
	"Year" : 3
}
{
	"_id" : 3,
	"Name" : "Saransh",
	"RollNo" : 17,
	"Dept" : "Comp",
	"Year" : 3
}
{ "_id" : 4, "Name" : "Abhi", "RollNo" : 18, "Dept" : "Comp", "Year" : 3 }
{
	"_id" : 5,
	"Name" : "Abhishek",
	"RollNo" : 19,
	"Dept" : "Comp",
	"Year" : 3
}
{
	"_id" : 7,
	"Name" : "Vaishu",
	"RollNo" : 21,
	"Dept" : "Comp",
	"Year" : 3
}
{
	"_id" : 8,
	"Name" : "Amar",
	"RollNo" : 23,
	"Dept" : "IT",
	"Year" : 3,
	"Grade" : "A+"
}
> 

Limit:

> db.Student.find().pretty().limit(2);
{
	"_id" : 1,
	"Name" : "Shivani",
	"RollNo" : 15,
	"Dept" : "Comp",
	"Year" : 3
}
{
	"_id" : 2,
	"Name" : "Shweta",
	"RollNo" : 16,
	"Dept" : "Comp",
	"Year" : 3
}
> db.Student.find().pretty().limit(3);
{
	"_id" : 1,
	"Name" : "Shivani",
	"RollNo" : 15,
	"Dept" : "Comp",
	"Year" : 3
}
{
	"_id" : 2,
	"Name" : "Shweta",
	"RollNo" : 16,
	"Dept" : "Comp",
	"Year" : 3
}
{
	"_id" : 3,
	"Name" : "Saransh",
	"RollNo" : 17,
	"Dept" : "Comp",
	"Year" : 3
}
> 

Skip:


> db.Student.find().pretty().limit(3).skip(4);
{
	"_id" : 5,
	"Name" : "Abhishek",
	"RollNo" : 19,
	"Dept" : "Comp",
	"Year" : 3
}
{
	"_id" : 7,
	"Name" : "Vaishu",
	"RollNo" : 21,
	"Dept" : "Comp",
	"Year" : 3
}
{
	"_id" : 8,
	"Name" : "Amar",
	"RollNo" : 23,
	"Dept" : "IT",
	"Year" : 3,
	"Grade" : "A+"
}


Sorting Ascending

> db.Student.find().sort({'Name':1});
{ "_id" : 4, "Name" : "Abhi", "RollNo" : 18, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 5, "Name" : "Abhishek", "RollNo" : 19, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 8, "Name" : "Amar", "RollNo" : 23, "Dept" : "IT", "Year" : 3, "Grade" : "A+" }
{ "_id" : 3, "Name" : "Saransh", "RollNo" : 17, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 1, "Name" : "Shivani", "RollNo" : 15, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 2, "Name" : "Shweta", "RollNo" : 16, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 7, "Name" : "Vaishu", "RollNo" : 21, "Dept" : "Comp", "Year" : 3 }
> 


Sorting Descending:

> db.Student.find().sort({'Name':-1});
{ "_id" : 7, "Name" : "Vaishu", "RollNo" : 21, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 2, "Name" : "Shweta", "RollNo" : 16, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 1, "Name" : "Shivani", "RollNo" : 15, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 3, "Name" : "Saransh", "RollNo" : 17, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 8, "Name" : "Amar", "RollNo" : 23, "Dept" : "IT", "Year" : 3, "Grade" : "A+" }
{ "_id" : 5, "Name" : "Abhishek", "RollNo" : 19, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 4, "Name" : "Abhi", "RollNo" : 18, "Dept" : "Comp", "Year" : 3 }
> 


Comparison Operator

Equal to:

> db.Student.find({'Name':{$eq:'Shivani'}});
{ "_id" : 1, "Name" : "Shivani", "RollNo" : 15, "Dept" : "Comp", "Year" : 3 }


Not Equal to:

> db.Student.find({'Name':{$ne:'Shivani'}});
{ "_id" : 2, "Name" : "Shweta", "RollNo" : 16, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 3, "Name" : "Saransh", "RollNo" : 17, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 4, "Name" : "Abhi", "RollNo" : 18, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 5, "Name" : "Abhishek", "RollNo" : 19, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 7, "Name" : "Vaishu", "RollNo" : 21, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 8, "Name" : "Amar", "RollNo" : 23, "Dept" : "IT", "Year" : 3, "Grade" : "A+" }
> 

Greater than

> db.Student.find({'RollNo':{$gt:18}});
{ "_id" : 5, "Name" : "Abhishek", "RollNo" : 19, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 7, "Name" : "Vaishu", "RollNo" : 21, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 8, "Name" : "Amar", "RollNo" : 23, "Dept" : "IT", "Year" : 3, "Grade" : "A+" }
> 

Greater than Equal to

> db.Student.find({'RollNo':{$gte:18}});
{ "_id" : 4, "Name" : "Abhi", "RollNo" : 18, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 5, "Name" : "Abhishek", "RollNo" : 19, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 7, "Name" : "Vaishu", "RollNo" : 21, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 8, "Name" : "Amar", "RollNo" : 23, "Dept" : "IT", "Year" : 3, "Grade" : "A+" }
> 


In operator

> db.Student.find({'RollNo':{$in:[15,19,21]}});
{ "_id" : 1, "Name" : "Shivani", "RollNo" : 15, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 5, "Name" : "Abhishek", "RollNo" : 19, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 7, "Name" : "Vaishu", "RollNo" : 21, "Dept" : "Comp", "Year" : 3 }
> 

Or Operator

> db.Student.find({$or:[{'Name':'Shivani'},{'RollNo':17}]});
{ "_id" : 1, "Name" : "Shivani", "RollNo" : 15, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 3, "Name" : "Saransh", "RollNo" : 17, "Dept" : "Comp", "Year" : 3 }

nor Operator

> db.Student.find({$nor:[{'Name':'Shivani'},{'RollNo':{$in:[19,21]}}]});
{ "_id" : 2, "Name" : "Shweta", "RollNo" : 16, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 3, "Name" : "Saransh", "RollNo" : 17, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 4, "Name" : "Abhi", "RollNo" : 18, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 8, "Name" : "Amar", "RollNo" : 23, "Dept" : "IT", "Year" : 3, "Grade" : "A+" }
> 


Not operator

> db.Student.find({'Name':{$not:{$eq:'Vaishu'}}});
{ "_id" : 1, "Name" : "Shivani", "RollNo" : 15, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 2, "Name" : "Shweta", "RollNo" : 16, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 3, "Name" : "Saransh", "RollNo" : 17, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 4, "Name" : "Abhi", "RollNo" : 18, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 5, "Name" : "Abhishek", "RollNo" : 19, "Dept" : "Comp", "Year" : 3 }
{ "_id" : 8, "Name" : "Amar", "RollNo" : 23, "Dept" : "IT", "Year" : 3, "Grade" : "A+" }


Add column in Collection

> db.Student.update({},{$set:{'Subject':'English'}},false,true);
WriteResult({ "nMatched" : 7, "nUpserted" : 0, "nModified" : 6 })
> db.Student.find().pretty();
{
	"_id" : 1,
	"Name" : "Shivani",
	"RollNo" : 15,
	"Dept" : "Comp",
	"Year" : 3,
	"Subject" : "English"
}
{
	"_id" : 2,
	"Name" : "Shweta",
	"RollNo" : 16,
	"Dept" : "Comp",
	"Year" : 3,
	"Subject" : "English"
}
{
	"_id" : 3,
	"Name" : "Saransh",
	"RollNo" : 17,
	"Dept" : "Comp",
	"Year" : 3,
	"Subject" : "English"
}
{
	"_id" : 4,
	"Name" : "Abhi",
	"RollNo" : 18,
	"Dept" : "Comp",
	"Year" : 3,
	"Subject" : "English"
}
{
	"_id" : 5,
	"Name" : "Abhishek",
	"RollNo" : 19,
	"Dept" : "Comp",
	"Year" : 3,
	"Subject" : "English"
}
{
	"_id" : 7,
	"Name" : "Vaishu",
	"RollNo" : 21,
	"Dept" : "Comp",
	"Year" : 3,
	"Subject" : "English"
}
{
	"_id" : 8,
	"Name" : "Amar",
	"RollNo" : 23,
	"Dept" : "IT",
	"Year" : 3,
	"Grade" : "A+",
	"Subject" : "English"
}
> 


Aggregration


> db.Student.aggregate([{$match:{Dept:'Comp'}}]);
{ "_id" : 1, "Name" : "Shivani", "RollNo" : 15, "Dept" : "Comp", "Year" : 3, "Subject" : "English" }
{ "_id" : 2, "Name" : "Shweta", "RollNo" : 16, "Dept" : "Comp", "Year" : 3, "Subject" : "English" }
{ "_id" : 3, "Name" : "Saransh", "RollNo" : 17, "Dept" : "Comp", "Year" : 3, "Subject" : "English" }
{ "_id" : 4, "Name" : "Abhi", "RollNo" : 18, "Dept" : "Comp", "Year" : 3, "Subject" : "English" }
{ "_id" : 5, "Name" : "Abhishek", "RollNo" : 19, "Dept" : "Comp", "Year" : 3, "Subject" : "English" }
{ "_id" : 7, "Name" : "Vaishu", "RollNo" : 21, "Dept" : "Comp", "Year" : 3, "Subject" : "English" }
> db.Student.aggregate([{$group:{_id:'$Name',totalDocs:{$sum:1}}}]);
{ "_id" : "Vaishu", "totalDocs" : 1 }
{ "_id" : "Abhishek", "totalDocs" : 1 }
{ "_id" : "Abhi", "totalDocs" : 1 }
{ "_id" : "Saransh", "totalDocs" : 1 }
{ "_id" : "Amar", "totalDocs" : 1 }
{ "_id" : "Shweta", "totalDocs" : 1 }
{ "_id" : "Shivani", "totalDocs" : 1 }
> 

> db.Student.aggregate([{$group:{_id:'$_id',totalDocs:{$sum:1}}}]);
{ "_id" : 8, "totalDocs" : 1 }
{ "_id" : 7, "totalDocs" : 1 }
{ "_id" : 5, "totalDocs" : 1 }
{ "_id" : 4, "totalDocs" : 1 }
{ "_id" : 3, "totalDocs" : 1 }
{ "_id" : 2, "totalDocs" : 1 }
{ "_id" : 1, "totalDocs" : 1 }
> 



> db.Student.aggregate([{'$group':{'_id':null,'max':{'$max':'$RollNo'},'min':{'$min':'$RollNo'}}}])
{ "_id" : null, "max" : 23, "min" : 15 }
.

> db.Student.aggregate([{'$group':{'_id':'$Dept','max':{'$max':'$RollNo'},'min':{'$min':'$RollNo'}}}])
{ "_id" : "IT", "max" : 23, "min" : 23 }
{ "_id" : "Comp", "max" : 21, "min" : 15 }


> db.Student.aggregate([{$match:{RollNo:{$gt:16}}}])
{ "_id" : 3, "Name" : "Saransh", "RollNo" : 17, "Dept" : "Comp", "Year" : 3, "Subject" : "English" }
{ "_id" : 4, "Name" : "Abhi", "RollNo" : 18, "Dept" : "Comp", "Year" : 3, "Subject" : "English" }
{ "_id" : 5, "Name" : "Abhishek", "RollNo" : 19, "Dept" : "Comp", "Year" : 3, "Subject" : "English" }
{ "_id" : 7, "Name" : "Vaishu", "RollNo" : 21, "Dept" : "Comp", "Year" : 3, "Subject" : "English" }
{ "_id" : 8, "Name" : "Amar", "RollNo" : 23, "Dept" : "IT", "Year" : 3, "Grade" : "A+", "Subject" : "English" }



> db.Student.aggregate([{'$sort': {'Name': 1}}])
{ "_id" : 4, "Name" : "Abhi", "RollNo" : 18, "Dept" : "Comp", "Year" : 3, "Subject" : "English" }
{ "_id" : 5, "Name" : "Abhishek", "RollNo" : 19, "Dept" : "Comp", "Year" : 3, "Subject" : "English" }
{ "_id" : 8, "Name" : "Amar", "RollNo" : 23, "Dept" : "IT", "Year" : 3, "Grade" : "A+", "Subject" : "English" }
{ "_id" : 3, "Name" : "Saransh", "RollNo" : 17, "Dept" : "Comp", "Year" : 3, "Subject" : "English" }
{ "_id" : 1, "Name" : "Shivani", "RollNo" : 15, "Dept" : "Comp", "Year" : 3, "Subject" : "English" }
{ "_id" : 2, "Name" : "Shweta", "RollNo" : 16, "Dept" : "Comp", "Year" : 3, "Subject" : "English" }
{ "_id" : 7, "Name" : "Vaishu", "RollNo" : 21, "Dept" : "Comp", "Year" : 3, "Subject" : "English" }
> db.Student.aggregate([{'$sort': {'Name': -1}}])
{ "_id" : 7, "Name" : "Vaishu", "RollNo" : 21, "Dept" : "Comp", "Year" : 3, "Subject" : "English" }
{ "_id" : 2, "Name" : "Shweta", "RollNo" : 16, "Dept" : "Comp", "Year" : 3, "Subject" : "English" }
{ "_id" : 1, "Name" : "Shivani", "RollNo" : 15, "Dept" : "Comp", "Year" : 3, "Subject" : "English" }
{ "_id" : 3, "Name" : "Saransh", "RollNo" : 17, "Dept" : "Comp", "Year" : 3, "Subject" : "English" }
{ "_id" : 8, "Name" : "Amar", "RollNo" : 23, "Dept" : "IT", "Year" : 3, "Grade" : "A+", "Subject" : "English" }
{ "_id" : 5, "Name" : "Abhishek", "RollNo" : 19, "Dept" : "Comp", "Year" : 3, "Subject" : "English" }
{ "_id" : 4, "Name" : "Abhi", "RollNo" : 18, "Dept" : "Comp", "Year" : 3, "Subject" : "English" }
> 


> var mapfunction = function(){emit(this.RollNo, this.Dept)}
> var reducefunction = function(key, values){return Array.sum(values)}
> db.Student.mapReduce(mapfunction, reducefunction, {'out':'Result'})
{
	"result" : "Result",
	"timeMillis" : 15,
	"counts" : {
		"input" : 7,
		"emit" : 7,
		"reduce" : 0,
		"output" : 7
	},
	"ok" : 1,
}
> db.Student.find();
{ "_id" : 1, "Name" : "Shivani", "RollNo" : 15, "Dept" : "Comp", "Year" : 3, "Subject" : "English" }
{ "_id" : 2, "Name" : "Shweta", "RollNo" : 16, "Dept" : "Comp", "Year" : 3, "Subject" : "English" }
{ "_id" : 3, "Name" : "Saransh", "RollNo" : 17, "Dept" : "Comp", "Year" : 3, "Subject" : "English" }
{ "_id" : 4, "Name" : "Abhi", "RollNo" : 18, "Dept" : "Comp", "Year" : 3, "Subject" : "English" }
{ "_id" : 5, "Name" : "Abhishek", "RollNo" : 19, "Dept" : "Comp", "Year" : 3, "Subject" : "English" }
{ "_id" : 7, "Name" : "Vaishu", "RollNo" : 21, "Dept" : "Comp", "Year" : 3, "Subject" : "English" }
{ "_id" : 8, "Name" : "Amar", "RollNo" : 23, "Dept" : "IT", "Year" : 3, "Grade" : "A+", "Subject" : "English" }
> 

> db.Student.distinct('Name');
[ "Shivani", "Shweta", "Saransh", "Abhi", "Abhishek", "Vaishu", "Amar" ]
> db.Student.count();
7
> 

> db.Student.createIndex({Name:1});
{
	"createdCollectionAutomatically" : false,
	"numIndexesBefore" : 1,
	"numIndexesAfter" : 2,
	"ok" : 1
}
> 

